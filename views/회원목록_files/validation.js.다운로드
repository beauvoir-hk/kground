var check_elements_type = "input[type=text], input[type=radio], input[type=checkbox], input[type=password], input[type=email], input[type=tel], select, textarea";
var message_type = "alert";

// 유효성 체크
function CheckValidation(check_id, is_check_pattern, is_check_rule) {
	var fail_count = 0;
	var obj;

	if (check_id.length > 0) {
		obj = $("#" + check_id);
		return CheckValidationRequired(obj, is_check_pattern, is_check_rule);
	}
	else {
		form.find(check_elements_type).each(function () {
			obj = $(this);
			if (message_type === "view") {
				if (!CheckValidationRequired(obj)) {
					fail_count++;
				}
			}
			else if (message_type === "alert") {
				return CheckValidationRequired(obj);
			}
		});
	}

	if (fail_count === 0) {
		return true;
	}
	else {
		return false;
	}
}

// 필수정보 공백체크
function CheckValidationRequired(obj, is_check_pattern, is_check_rule) {
	var companyName = $("#companyName").val();
	var process_type = $.trim($("#process_type").val());
	var auth_sort_code = $.trim($("#auth_sort_code").val());	
	var standard_value;
	var compare_value;
	var element;
	var value;
	var id;
	var title;
	var success = true;
	var message = "";
	id = obj.attr("id");
	
	if (id === undefined) {
		return true;
	}
	else if (id === "") {
		return true;
	}
	else {
		element = $(obj).prop("tagName");
		if (element.toLowerCase() === "select") {
			value = $.trim($("#" + id + " option:selected").val());
		}
		else {
			value = $.trim(obj.val());
		}

		if (id === "address_withdraw_fee_rate") {
			title = "외부 수수료율";
		}
		else if (id === "user_withdraw_fee_rate") {
			title = "내부 수수료율";
		}
		else if (id === "address_withdraw_fee_fixed") {
			title = "고정 외부 수수료";
		}
		else if (id === "user_withdraw_fee_fixed") {
			title = "고정 내부 수수료";
		}
		else if (id === "withdraw_min_amount") {
			title = "외부 출금 최소 수량";
		}
		else if (id === "user_withdraw_min_amount") {
			title = "내부 출금 최소 수량";
		}
		else if (id.search("sell_change_count_") !== -1) {
			title = "판매변환비율";
		}
		else if (id.search("change_count_") !== -1) {
			title = "구매변환비율";
		}
		else if (id === "first_terminate_year") {
			title = "최초 락업 해지 년도";
		}
		else if (id === "first_terminate_month") {
			title = "최초 락업 해지 월";
		}
		else if (id === "first_terminate_day") {
			title = "최초 락업 해지 일";
		}
		else if (id === "investment_rate") {
			title = "투자수익률";
		}
		else if (id === "aig2_recommender_reward_rate_1") {
			title = "1대 추천수당 지급률";
		}
		else if (id === "aig2_recommender_reward_rate_2") {
			title = "2대 추천수당 지급률";
		}
		else if (id.indexOf("reward3_rate_") != -1) {
			if (companyName == "istar") {
				title = "간접소개수당률";
			}
		}
		else {
			title = $("label[for='" + id + "']").text().replace("*", "");
		}

		if (id.indexOf("oneday_reward_payments_amount") != -1) {
			title = "채굴 보상 " + title;
		}

		if (obj.prop("required")) {
			if (value.length < 1) {
				message = "필수 정보입니다.";
				if (message_type === "alert") {
					message += " (" + title + ")";
				}

				success = false;

				if (process_type === "edit") {
					if (id === "hp_auth_text") {
						message = "휴대폰 인증을 해주세요.";

						standard_value = $.trim($("#member_hp_number").val());
						compare_value = $.trim($("#now_member_hp_number").val());						

						if (standard_value === compare_value) {
							success = true;
							message = "";
						}						
					}
					if (id === "email_auth_text") {
						message = "이메일 인증을 해주세요.";

						standard_value = $.trim($("#member_email_address").val());
						compare_value = $.trim($("#now_member_email_address").val());

						if (standard_value === compare_value) {
							success = true;
							message = "";
						}
					}
				}
				else {
					if (auth_sort_code !== "password_reset") {
						if (id === "hp_auth_text") {
							message = "휴대폰 인증을 해주세요.";
						}
						if (id === "email_auth_text") {
							message = "이메일 인증을 해주세요.";
						}
					}
				}
				
				ReturnMessage(obj, success, message);
				return success;
			}
			else {
				if (!is_check_pattern) {
					success = true;
				}
				else {
					success = CheckValidationPattern(id, is_check_rule);
				}
				return success;
			}
		}
		else {
			if (value.length > 0) {
				if (id === "recommender_id") {
					success = CheckValidationRule(id);
				}
				else if (id === "member_password") {
					success = CheckValidationRule(id);
				}
				else if (id === "new_member_password") {
					success = CheckValidationPattern(id, true);
				}
				else if (id === "new_member_check_password") {
					success = CheckValidationRule(id);
				}
			}
			else {
				InitMessage(obj);
				if (id === "member_password") {
					success = CheckValidationRule(id);
				}
				else if (id === "new_member_password") {
					success = CheckValidationRule(id);
				}
				else if (id === "new_member_check_password") {
					success = CheckValidationRule(id);
				}
			}

			return success;
		}
	}
}

function CheckNumber(value, title, min_amount, isMinOver, max_amount, isMaxOver, float_down_cnt, isFloat) {
	let float_cnt = 0;
	let status = true;
	let message = "";

	for (i = 0; i < value.length; i++) {
		if (value.charAt(i) === ".") {
			++float_cnt;
			if (float_cnt > (isFloat ? 1 : 0)) {
				status = false;
				if (!isFloat) {
					message = "숫자만 입력해 주세요.";
				}
				break;
			}
		}
	}

	if (status) {
		let first_char = value.charAt(0);
		let last_char = value.charAt(value.length - 1);
		let pattern = /^[0-9]$/;
		status = pattern.test(first_char);

		if (status) {
			pattern = float_cnt === 0 ? /^[0-9]$/ : /^[1-9]$/;
			status = pattern.test(last_char);

			if (status) {
				if (isMinOver) {
					status = parseFloat(value) > min_amount;
				}
				else {
					status = parseFloat(value) >= min_amount;
				}

				if (status) {
					if (isMaxOver) {
						status = parseFloat(value) <= max_amount;
					}
					else {
						status = parseFloat(value) < max_amount;
					}

					if (status) {
						if (value.indexOf(".") !== -1) {
							status = value.split(".")[1].length <= float_down_cnt;
						}

						if (status) {
							pattern = /^[0-9]{1,100}$/g;
							status = pattern.test(value.replace(".", ""));
						}
						else {
							message = "소수점은 최대 " + float_down_cnt + "자리 까지만 입력이 가능합니다.";
						}
					}
					else {
						if (isMaxOver) {
							message = "값은 " + max_amount.toLocaleString() + "이하여야 합니다.";
						}
						else {
							message = "값은 " + max_amount.toLocaleString() + "미만이어야 합니다.";							
						}
					}
				}
				else {
					if (isMinOver) {
						message = "값은 " + min_amount + "을 초과하여야 합니다.";
					}
					else {
						message = "값은 " + min_amount + "이상이어야 합니다.";
					}
				}
			}
		}
	}

	if (!status) {
		if (message === "") {
			message = title + "을(를) 바르게 입력해주세요.";
		}
	}

	return status.toString() + "|" + message;
}

// 패턴체크
function CheckValidationPattern(id, is_check_rule) {
	var obj = $("#" + id);
	var check_pattern = true;
	var pattern;
	var message = "";
	var element = obj.prop("tagName");
	var value;
	var first_char;
	var last_char;
	var float_cnt = 0;
	var max_amount = 100000000;
	var i;
	var float_down_cnt = parseInt($("#point_count").val());
	var coin_type = $("#coin_type").val();
	let result;

	if (coin_type === undefined) {
		coin_type = "";
	}
	else {
		coin_type = coin_type.toLowerCase();
	}

	if (element.toLowerCase() === "select") {
		value = $("#" + id + " option:selected").val();
	}
	else {
		value = obj.val();
	}

	let isPackageRegist = $("#isPackageRegist").val() == "1";
	
	if (isPackageRegist) {
		let companyName = $("#companyName").val();

		if (companyName === "istar") {
			if (id === "packageAmount") {
				result = CheckNumber(value, "구매금액", 0, true, max_amount, false, float_down_cnt, true);
				check_pattern = result.split("|")[0] == "true";
				message = result.split("|")[1];
			}
			else if (id === "revenueRateOneYear") {
				result = CheckNumber(value, "연이자율", 0, false, 100, true, float_down_cnt, true);
				check_pattern = result.split("|")[0] == "true";
				message = result.split("|")[1];
			}
			else if (id === "reward2_amount") {
				result = CheckNumber(value, "직접소개수당", 0, false, max_amount, true, float_down_cnt, true);
				check_pattern = result.split("|")[0] == "true";
				message = result.split("|")[1];
			}
			else if (id.indexOf("reward3_rate_") != -1) {
				result = CheckNumber(value, "간접소개수당률", 0, false, 100, true, float_down_cnt, true);
				check_pattern = result.split("|")[0] == "true";
				message = result.split("|")[1];
			}
		}
	}
	else {
		if (id === "validity_day" || id === "change_lock_day") {
			check_pattern = $.isNumeric(value);
			if (check_pattern) {
				pattern = /^[1-9]$/;
				check_pattern = pattern.test(value.charAt(0));
				if (!check_pattern) {
					message = "맨앞의 숫자는 1~9중의 숫자여야 합니다.";
				}
			}

			if (check_pattern) {
				pattern = /^[0-9]{1,100}$/g;
				check_pattern = pattern.test(value);
			}

			if (!check_pattern) {
				if (message === "") {
					message = "숫자만 입력 가능합니다.";
				}
			}
		}
		else if (id.search("product_idx") !== -1) {
			check_pattern = true;
		}
		else if (id.search("email_address") !== -1 || id === "edit_member_id") {
			pattern = /^[A-Za-z0-9_+\.\-]+@[A-Za-z0-9\-]+\.[A-Za-z0-9\-]+/;
			check_pattern = pattern.test(value);
			var is_email_auth_use = $("#email_auth_text").length === 1;

			if (!check_pattern) {
				message = "이메일 형식에 맞지 않습니다.";
				if (is_email_auth_use) {
					$("#is_check_email").val("0");
				}
			}
			else {
				if (!is_email_auth_use) {
					message = "사용가능한 이메일 주소 입니다.";
				}
			}
		}
		else if (id.search("hp_number") !== -1) {
			pattern = /^[0-9]{10,12}$/;
			check_pattern = pattern.test(value);
			var is_hp_auth_use = $("#hp_auth_text").length === 1;

			if (!check_pattern) {
				message = "휴대폰번호 형식에 맞지 않습니다.";
				if (is_hp_auth_use) {
					$("#is_check_hp").val("0");
				}
			}
			else {
				if (!is_hp_auth_use) {
					message = "사용가능한 휴대폰번호 입니다.";
				}
			}
		}
		else if (id === "token_id") {
			pattern = /^[1-9]{1,100}$/g;
			check_pattern = pattern.test(value);

			if (!check_pattern) {
				message = "TOKEN ID를 바르게 입력해주세요.";
			}
		}
		else if (id.search("id") !== -1) {
			check_pattern = true;
			//pattern = /^[a-zA-Z]{2,20}$/;
			//check_pattern = pattern.test(value);

			//if (!check_pattern) {
			//	pattern = /^[0-9]{2,20}$/;
			//	check_pattern = pattern.test(value);
			//}

			//if (!check_pattern) {
			//	pattern = /^[a-zA-Z0-9]{2,20}$/;
			//	check_pattern = pattern.test(value);
			//}

			//if (!check_pattern) {
			//	message = "아이디는 2~20자리의 영문 또는 숫자 또는 영문+숫자만 사용 가능합니다.";
			//}
		}
		else if (id.search("prefect_name") !== -1) {
			check_pattern = true;
		}
		else if (id.search("center_name") !== -1) {
			check_pattern = true;
		}
		else if (id.search("check_password") !== -1) {
			check_pattern = true;
			is_check_rule = true;
		}
		else if (id.search("password") !== -1) {
			pattern = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@@$!%*#?&])[A-Za-z\d$@@$!%*#?&]{8,20}$/;
			check_pattern = pattern.test(value);

			if (check_pattern) {
				if (message_type === "view") {
					message = "사용 가능한 비밀번호 입니다.";
				}
			}
			else {
				message = "비밀번호는 8~20자리의 영문 대문자 또는 소문자+숫자+특수문자를 사용하세요.";
			}

			if (id === "new_member_password") {
				InitMessage($("#member_password"));
				InitMessage($("#new_member_check_password"));

				if ($.trim($("#member_password").val()).length < 1) {
					ReturnMessage($("#member_password"), false, "현재 비밀번호를 입력하세요.");
				}

				if ($.trim($("#new_member_password").val()) === $.trim($("#new_member_check_password").val())) {
					ReturnMessage($("#new_member_check_password"), true, "새 비밀번호와 일치합니다.");
				}
				else {
					ReturnMessage($("#new_member_check_password"), false, "새 비밀번호가 일치하지 않습니다.");
				}
			}
		}
		else if (id.search("account_number") !== -1) {
			pattern = /^[0-9]{4,20}$/;
			check_pattern = pattern.test(value);
			message = "계좌번호를 바르게 입력하세요.";
		}
		else if (id.search("bank_name") !== -1) {
			check_pattern = true;
		}
		else if (id.search("account_member_name") !== -1) {
			check_pattern = true;
		}
		else if (id.search("name") !== -1) {
			pattern = /^[가-힣A-Za-z0-9]{2,20}$/;
			value = value.replace(/ /gi, "");
			check_pattern = pattern.test(value);

			if (check_pattern) {
				if (message_type === "view") {
					message = "사용 가능한 이름 입니다.";
				}
			}
			else {
				message = "이름은 2~20자리의 한글 또는 영문 대 소문자를 사용하세요.";
			}
		}
		else if (id.search("country_code") !== -1) {
			pattern = /[0-9]/;
			check_pattern = pattern.test(value);

			if (check_pattern) {
				if (message_type === "view") {
					message = "사용 가능한 국가 입니다.";
				}
			}
			else {
				message = "잘못된 국가입니다.";
			}
		}
		else if (id.search("hp_auth_text") !== -1) {
			pattern = /^[0-9]{4}$/;
			check_pattern = pattern.test(value);

			if (!check_pattern) {
				message = "인증번호를 바르게 입력하세요.";
			}
		}
		else if (id.search("email_auth_text") !== -1) {
			pattern = /^[0-9]{4}$/;
			check_pattern = pattern.test(value);

			if (!check_pattern) {
				message = "인증번호를 바르게 입력하세요.";
			}
		}
		else if (id.search("product_amount") !== -1 || id === "withdraw_min_amount" || id === "one_day_withdrawal_price" || id === "one_time_withdrawal_price" || id === "deposit_min_amount" ||
			id === "address_withdraw_fee_rate" || id === "user_withdraw_fee_rate" || id === "user_withdraw_min_amount" || id === "min_buying_amount" || id === "min_sell_amount" ||
			id === "oneday_buying_possible_amount" || id === "oneday_sell_possible_amount" || id === "one_time_min_amount" || id === "one_time_max_amount" || id === "payments_rate" || id === "reward_payments_count" ||
			id === "address_withdraw_fee_fixed" || id === "user_withdraw_fee_fixed" || id === "mining_distribution_payments_amount" || id === "reward_payments_rate" || id === "reward_payments_month_count" ||
			id === "package_buying_amount" || id === "reward_payments_standard_amount" || id.indexOf("oneday_reward_payments_amount") != -1 || id === "rollup_payments_count" || id === "rolldown_payments_count" ||
			id === "mining_rewards_waiting_days" || id === "aig2_recommender_reward_rate_1" || id === "aig2_recommender_reward_rate_2"
		) {
			var amount_text = id.search("product_amount") !== -1 || id === "package_buying_amount" || id === "reward_payments_standard_amount" ? "금액" : "수량";

			if (id === "payments_rate") {
				amount_text = "이자율";
			}
			else if (id === "reward_payments_rate") {
				amount_text = "리워드 지급률";
			}
			else if (id === "reward_payments_count") {
				amount_text = "지급횟수";
			}
			else if (id === "reward_payments_month_count") {
				amount_text = "지급개월수";
			}
			else if (id === "address_withdraw_fee_rate" || id === "user_withdraw_fee_rate") {
				amount_text = "출금 수수료율";
			}
			else if (id === "address_withdraw_fee_fixed" || id === "user_withdraw_fee_fixed") {
				amount_text = "고정 출금 수수료";
			}
			else if (id === "mining_distribution_payments_amount") {
				amount_text = "지급 수량";
			}
			else if (id === "package_buying_amount") {
				amount_text = "구매가";
			}
			else if (id === "reward_payments_standard_amount") {
				amount_text = "리워드지급 기준금액";
			}
			else if (id.indexOf("oneday_reward_payments_amount") != -1) {
				amount_text = "일일 채굴보상 지급금액";
			}
			else if (id === "mining_rewards_payments_count") {
				amount_text = "채굴보상 지급횟수";
			}
			else if (id === "mining_rewards_waiting_days") {
				amount_text = "채굴보상 최초지급 대기일수";
			}
			else if (id === "aig2_recommender_reward_rate_1") {
				amount_text = "1대 추천수당 지급률";
			}
			else if (id === "aig2_recommender_reward_rate_2") {
				amount_text = "2대 추천수당 지급률";
			}

			float_down_cnt = parseInt($("#point_count").val());
			first_char = value.charAt(0);
			last_char = value.charAt(value.length - 1);
			float_cnt = 0;

			var min_amount = SetRemoveComma($.trim($("#product_min_amount").val()));
			max_amount = SetRemoveComma($.trim($("#product_max_amount").val()));

			if (coin_type === "krw" || id === "reward_payments_count" || id === "reward_payments_month_count" || id === "rollup_payments_count" || id === "rolldown_payments_count" ||
				id === "mining_rewards_payments_count" || id === "mining_rewards_waiting_days") {
				if (value.indexOf(".") !== -1) {
					check_pattern = false;
					message = "숫자만 입력 가능합니다.";
				}
			}
			else {
				for (i = 0; i < value.length; i++) {
					if (value.charAt(i) === ".") {
						++float_cnt;
						if (float_cnt > 1) {
							check_pattern = false;
							message = "소수점은 2개이상 존재할 수 없습니다.";
							break;
						}
					}
				}
			}

			if (check_pattern) {
				pattern = /^[0-9]$/;

				check_pattern = pattern.test(first_char);
				if (!check_pattern) {
					message = "첫번째 숫자는 0~9중의 숫자여야 합니다.";
				}
			}

			if (check_pattern) {
				if (float_cnt === 0) {
					pattern = /^[0-9]$/;
				}
				else {
					pattern = /^[1-9]$/;
				}

				check_pattern = pattern.test(last_char);
				if (!check_pattern) {
					if (float_cnt === 0) {
						message = "마지막 숫자는 0~9중의 숫자여야 합니다.";
					}
					else {
						message = "소수점이 존재하는 " + amount_text + "의 마지막 숫자는 1~9중의 숫자여야 합니다.";
					}
				}
			}

			if (check_pattern && id.search("product_amount") !== -1) {
				if (parseFloat(value) < min_amount) {
					check_pattern = false;
					message = amount_text + "은(는) " + SetComma(min_amount) + "이상이어야 합니다.";
				}
				else if (parseFloat(value) >= max_amount) {
					check_pattern = false;
					message = amount_text + "은(는) " + SetComma(max_amount) + "미만이어야 합니다.";
				}
			}

			if (check_pattern) {
				if (id.search("product_amount") !== -1) {
					float_down_cnt = 1;
				}

				if (value.indexOf(".") !== -1) {
					if (value.split(".")[1].length > float_down_cnt) {
						check_pattern = false;
						message = "소수점은 최대 " + float_down_cnt + "자리 까지만 입력이 가능합니다.";
					}
				}
			}

			if (check_pattern) {
				pattern = /^[0-9]{1,100}$/g;
				check_pattern = pattern.test(value.replace(".", ""));
			}

			if (!check_pattern) {
				if (message === "") {
					message = amount_text + "을(를) 바르게 입력해주세요.";
				}
			}
		}
		else if (id.search("change_count_") !== -1) {
			first_char = value.charAt(0);
			last_char = value.charAt(value.length - 1);
			float_cnt = 0;
			max_amount = 100;

			for (i = 0; i < value.length; i++) {
				if (value.charAt(i) === ".") {
					++float_cnt;
					if (float_cnt > 1) {
						check_pattern = false;
						message = "소수점은 2개이상 존재할 수 없습니다.";
						break;
					}
				}
			}

			if (check_pattern) {
				pattern = /^[0-9]$/;

				check_pattern = pattern.test(first_char);
				if (!check_pattern) {
					message = "첫번째 숫자는 0~9중의 숫자여야 합니다.";
				}
			}

			if (check_pattern) {
				if (float_cnt === 0) {
					pattern = /^[0-9]$/;
				}
				else {
					pattern = /^[1-9]$/;
				}

				check_pattern = pattern.test(last_char);
				if (!check_pattern) {
					if (float_cnt === 0) {
						message = "마지막 숫자는 0~9중의 숫자여야 합니다.";
					}
					else {
						message = "소수점이 존재하는 수량의 마지막 숫자는 1~9중의 숫자여야 합니다.";
					}
				}
			}

			if (check_pattern) {
				if (parseFloat(value) > max_amount) {
					check_pattern = false;
					message = SetComma(max_amount) + "보다 작아야 합니다.";
				}
			}
			if (check_pattern) {
				float_down_cnt = 1;

				if (value.indexOf(".") !== -1) {
					if (value.split(".")[1].length > float_down_cnt) {
						check_pattern = false;
						message = "소수점은 최대 " + float_down_cnt + "자리 까지만 입력이 가능합니다.";
					}
				}
			}

			if (check_pattern) {
				if (parseInt(first_char) === 0) {
					if (value.substring(1, 2).toString() === "0") {
						check_pattern = false;
						message = "변환비율을 바르게 입력해 주세요.";
					}
				}
			}

			if (check_pattern) {
				pattern = /^[0-9]{1,100}$/g;
				check_pattern = pattern.test(value.replace(".", ""));
			}

			if (!check_pattern) {
				if (message === "") {
					message = "변환비율을 바르게 입력해주세요.";
				}
			}
		}
		else if (id.search("price") !== -1 || id.search("cancel_package") !== -1 || id.search("build_lock_day") !== -1 || id.search("reward_standard_rate") !== -1 || id.search("product_buy_way_quantity") !== -1 ||
			id.search("buy_possible_count") !== -1 || id.search("buy_yield") !== -1 || id.search("matching_rate") !== -1 || id.search("min_amount") !== -1 || id.search("payment_days") !== -1 || id.search("payment_limit") !== -1 ||
			id === "point_rate"
		) {
			if (value === "0" || value === 0) {
				if (id === "cancel_package" || id === "reward_standard_rate" || id === "buy_possible_count" || id === "buy_yield" || id === "validity_day" ||
					id === "matching_rate" || id === "product_min_price" || id === "product_max_price" || id === "min_amount" || id === "payment_days" || id === "payment_limit") {
					check_pattern = false;
					message = "값은 0보다 커야합니다.";
				}
				else {
					check_pattern = true;
				}
			}
			else {
				check_pattern = $.isNumeric(value);
				if (check_pattern) {
					pattern = /^[1-9]$/;
					check_pattern = pattern.test(value.charAt(0));
					if (!check_pattern) {
						message = "맨앞의 숫자는 1~9중의 숫자여야 합니다.";
					}
				}

				if (check_pattern) {
					if (id === "matching_rate") {
						if (parseInt($.trim($("#matching_rate").val())) > 100) {
							check_pattern = false;
							message = "매칭률은 100%를 넘을 수 없습니다.";
						}
					}
				}

				if (check_pattern) {
					pattern = /^[0-9]{1,100}$/g;
					check_pattern = pattern.test(value);
				}

				if (check_pattern) {
					if (parseFloat(value) > max_amount) {
						check_pattern = false;
						message = "%는 " + SetComma(max_amount) + "보다 작아야 합니다.";
					}
				}

				if (!check_pattern) {
					if (message === "") {
						message = "숫자만 입력 가능합니다.";
					}
				}
			}
		}
		else if (id === "adminSettingCoinAmount") {
			first_char = value.charAt(0);
			last_char = value.charAt(value.length - 1);
			float_cnt = 0;
			max_amount = 1000000000;

			var is_float = $("#swapStandardCash").val() === "KRW" ? false : true;

			for (i = 0; i < value.length; i++) {
				if (value.charAt(i) === ".") {
					++float_cnt;
					if (float_cnt > (is_float ? 1 : 0)) {
						check_pattern = false;
						message = "소수점은 " + (is_float ? "2개이상 " : "") + "존재할 수 없습니다.";
						break;
					}
				}
			}

			if (check_pattern) {
				pattern = /^[0-9]$/;

				check_pattern = pattern.test(first_char);
				if (!check_pattern) {
					message = "첫번째 숫자는 0~9중의 숫자여야 합니다.";
				}
			}

			if (check_pattern) {
				if (float_cnt === 0) {
					pattern = /^[0-9]$/;
				}
				else {
					pattern = /^[1-9]$/;
				}

				check_pattern = pattern.test(last_char);
				if (!check_pattern) {
					if (float_cnt === 0) {
						message = "마지막 숫자는 0~9중의 숫자여야 합니다.";
					}
					else {
						message = "소수점이 존재하는 수량의 마지막 숫자는 1~9중의 숫자여야 합니다.";
					}
				}
			}

			if (check_pattern) {
				if (parseFloat(value) > max_amount) {
					check_pattern = false;
					message = "수량은 " + SetComma(max_amount) + "보다 작아야 합니다.";
				}
			}

			if (check_pattern) {
				if (value.indexOf(".") !== -1) {
					if (value.split(".")[1].length > 3) {
						check_pattern = false;
						message = "소수점은 최대 " + 3 + "자리 까지만 입력이 가능합니다.";
					}
				}
			}

			if (check_pattern) {
				pattern = /^[0-9]{1,100}$/g;
				check_pattern = pattern.test(value.replace(".", ""));
			}

			if (!check_pattern) {
				if (message === "") {
					message = "수량을 바르게 입력해주세요.";
				}
			}
		}
		else if (id.search("amount") !== -1) {
			if (value === "0" || value === 0) {
				check_pattern = false;
				message = "수량은 0보다 커야합니다.";
			}
			else {
				var process_type = $("input[name=process_type]:checked");
				var process_type_value = "";

				if (process_type.length > 0) {
					process_type_value = process_type.val();
				}

				first_char = value.charAt(0);
				last_char = value.charAt(value.length - 1);
				float_cnt = 0;
				max_amount = 100000000000;

				if (process_type_value.indexOf("coin_point_") !== -1 || process_type_value.indexOf("change_point_") !== -1 || id === "terminate_amount") {
					var is_float = coin_type === "krw" ? false : true;

					for (i = 0; i < value.length; i++) {
						if (value.charAt(i) === ".") {
							++float_cnt;
							if (float_cnt > (is_float ? 1 : 0)) {
								check_pattern = false;
								message = "소수점은 " + (is_float ? "2개이상 " : "") + "존재할 수 없습니다.";
								break;
							}
						}
					}

					if (check_pattern) {
						if (float_cnt === 0) {
							pattern = /^[1-9]$/;
						}
						else {
							pattern = /^[0-9]$/;
						}

						check_pattern = pattern.test(first_char);
						if (!check_pattern) {
							if (float_cnt === 0) {
								message = "첫번째 숫자는 1~9중의 숫자여야 합니다.";
							}
							else {
								message = "소수점이 존재하는 수량의 첫번째 숫자는 0~9중의 숫자여야 합니다.";
							}
						}
					}

					if (check_pattern) {
						if (float_cnt === 0) {
							pattern = /^[0-9]$/;
						}
						else {
							pattern = /^[1-9]$/;
						}

						check_pattern = pattern.test(last_char);
						if (!check_pattern) {
							if (float_cnt === 0) {
								message = "마지막 숫자는 0~9중의 숫자여야 합니다.";
							}
							else {
								message = "소수점이 존재하는 수량의 마지막 숫자는 1~9중의 숫자여야 합니다.";
							}
						}
					}

					if (check_pattern) {
						if (parseFloat(value) > max_amount) {
							check_pattern = false;
							message = "수량은 " + SetComma(max_amount) + "보다 작아야 합니다.";
						}
					}

					if (check_pattern) {
						if (value.indexOf(".") !== -1) {
							if (value.split(".")[1].length > float_down_cnt) {
								check_pattern = false;
								message = "소수점은 최대 " + float_down_cnt + "자리 까지만 입력이 가능합니다.";
							}
						}
					}

					if (check_pattern) {
						pattern = /^[0-9]{1,100}$/g;
						check_pattern = pattern.test(value.replace(".", ""));
					}
				}
				else {
					check_pattern = $.isNumeric(value);
					if (check_pattern) {
						pattern = /^[1-9]$/;
						check_pattern = pattern.test(first_char);
						if (!check_pattern) {
							message = "맨앞의 숫자는 1~9중의 숫자여야 합니다.";
						}
					}

					if (check_pattern) {
						pattern = /^[0-9]{1,100}$/g;
						check_pattern = pattern.test(value);
					}

					if (!check_pattern) {
						if (message === "") {
							message = "숫자만 입력 가능합니다.";
						}
					}

					if (check_pattern) {
						if (process_type_value === "product") {
							max_amount = 50;
							if (parseInt(value) > max_amount) {
								check_pattern = false;
								message = "최대 지급 수량은" + SetComma(max_amount) + "개 입니다.";
							}
						}
					}
				}

				if (!check_pattern) {
					if (message === "") {
						message = "수량을 바르게 입력해주세요.";
					}
				}
			}
		}
		else if (id.search("fee_rate") !== -1 || id === "buyer_complete_rate" || id === "saller_complete_rate" || id === "terminate_rate" || id === "investment_rate" || id === "coin_convert_fee_rate") {
			first_char = value.charAt(0);
			last_char = value.charAt(value.length - 1);
			float_cnt = 0;
			max_amount = 100;

			if (parseFloat(value) < 0) {
				check_pattern = false;
				message = "값은 0이상이어야 합니다.";
			}
			else {
				for (i = 0; i < value.length; i++) {
					if (value.charAt(i) === ".") {
						++float_cnt;
						if (float_cnt > 1) {
							check_pattern = false;
							message = "소수점은 2개이상 존재할 수 없습니다.";
							break;
						}
					}
				}

				if (check_pattern) {
					pattern = /^[0-9]$/;

					check_pattern = pattern.test(first_char);
					if (!check_pattern) {
						message = "첫번째 숫자는 0~9중의 숫자여야 합니다.";
					}
				}

				if (check_pattern) {
					if (float_cnt === 0) {
						pattern = /^[0-9]$/;
					}
					else {
						pattern = /^[1-9]$/;
					}

					check_pattern = pattern.test(last_char);
					if (!check_pattern) {
						if (float_cnt === 0) {
							message = "마지막 숫자는 0~9중의 숫자여야 합니다.";
						}
						else {
							message = "소수점이 존재하는 값의 마지막 숫자는 1~9중의 숫자여야 합니다.";
						}
					}
				}

				if (check_pattern) {
					if (parseFloat(value) > max_amount) {
						check_pattern = false;
						message = SetComma(max_amount) + "보다 작아야 합니다.";
					}
				}
				if (check_pattern) {
					float_down_cnt = 1;

					if (value.indexOf(".") !== -1) {
						if (value.split(".")[1].length > float_down_cnt) {
							check_pattern = false;
							message = "소수점은 최대 " + float_down_cnt + "자리 까지만 입력이 가능합니다.";
						}
					}
				}

				if (check_pattern) {
					pattern = /^[0-9]{1,100}$/g;
					check_pattern = pattern.test(value.replace(".", ""));
				}

				if (!check_pattern) {
					if (message === "") {
						message = "%를 바르게 입력해주세요.";
					}
				}
			}
		}
		else if (id.search("fee") !== -1) {
			first_char = value.charAt(0);
			last_char = value.charAt(value.length - 1);
			float_cnt = 0;
			max_amount = 100;

			for (i = 0; i < value.length; i++) {
				if (value.charAt(i) === ".") {
					++float_cnt;
					if (float_cnt > 1) {
						check_pattern = false;
						message = "소수점은 2개이상 존재할 수 없습니다.";
						break;
					}
				}
			}

			if (check_pattern) {
				pattern = /^[0-9]$/;

				check_pattern = pattern.test(first_char);
				if (!check_pattern) {
					message = "첫번째 숫자는 0~9중의 숫자여야 합니다.";
				}
			}

			if (check_pattern) {
				if (float_cnt === 0) {
					pattern = /^[0-9]$/;
				}
				else {
					pattern = /^[1-9]$/;
				}

				check_pattern = pattern.test(last_char);
				if (!check_pattern) {
					if (float_cnt === 0) {
						message = "마지막 숫자는 0~9중의 숫자여야 합니다.";
					}
					else {
						message = "소수점이 존재하는 수량의 마지막 숫자는 1~9중의 숫자여야 합니다.";
					}
				}
			}

			if (check_pattern) {
				if (parseFloat(value) > max_amount) {
					check_pattern = false;
					message = "수량은 " + SetComma(max_amount) + "보다 작아야 합니다.";
				}
			}

			if (check_pattern) {
				if (value.indexOf(".") !== -1) {
					if (value.split(".")[1].length > float_down_cnt) {
						check_pattern = false;
						message = "소수점은 최대 " + float_down_cnt + "자리 까지만 입력이 가능합니다.";
					}
				}
			}

			if (check_pattern) {
				pattern = /^[0-9]{1,100}$/g;
				check_pattern = pattern.test(value.replace(".", ""));
			}

			if (!check_pattern) {
				if (message === "") {
					message = "수량을 바르게 입력해주세요.";
				}
			}
		}
		else if (id.search("use_end_date") !== -1) {
			pattern = /^(19|20)\d{2}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[0-1])$/;

			check_pattern = pattern.test(value);

			if (!check_pattern) {
				message = "날짜형식(yyyy-MM-dd)이 올바르지 않습니다.";
			}
		}
		else {
			return true;
		}
	}

	ReturnMessage(obj, check_pattern, message);

	if (!check_pattern) {
		return check_pattern;
	}
	else {
		if (!is_check_rule) {
			return true;
		}
		else {
			return CheckValidationRule(id);
		}
	}
}

// 룰체크
function CheckValidationRule(id) {
	var success = true;
	var message = "";
	var obj = $("#" + id);
	var element = $(obj).prop("tagName");
	var check_val;
	var value;
	var process_type = $.trim($("#process_type").val());
	var standard_value;
	var compare_value;
	
	if (element.toLowerCase() === "select") {
		value = $("#" + id + " option:selected").val();
	}
	else {
		value = obj.val();
	}
	
	if (id === "member_check_password") {
		check_val = $.trim($("#member_password").val());
		
		if (value === check_val) {
			success = true;
			message = "비밀번호와 일치합니다.";
		}
		else {
			success = false;
			message = "비밀번호가 일치하지 않습니다.";
		}
	}
	else if (id === "member_password") {
		check_val = $.trim($("#new_member_password").val());
		InitMessage(obj);

		if (value.length < 1 && check_val.length > 0) {
			success = false;
			message = "현재 비밀번호를 입력하세요.";
		}
	}
	else if (id === "new_member_password") {
		obj = $("#member_password");
		check_val = $.trim(obj.val());
		InitMessage(obj);
		InitMessage($("#new_member_check_password"));

		if (value.length > 0 && check_val.length < 1) {
			success = false;
			message = "현재 비밀번호를 입력하세요.";
		}
	}
	else if (id === "new_member_check_password") {
		check_val = $.trim($("#new_member_password").val());
		InitMessage(obj);

		if (check_val.length > 0) {
			if (value === check_val) {
				success = true;
				message = "새 비밀번호와 일치합니다.";
			}
			else {
				success = false;
				message = "새 비밀번호가 일치하지 않습니다.";
			}
		}
	}
	else if (id === "hp_auth_text") {
		check_val = $.trim($("#is_check_hp").val());
		
		if (process_type === "edit") {
			standard_value = $.trim($("#member_hp_number").val());
			compare_value = $.trim($("#now_member_hp_number").val());

			if (standard_value !== compare_value && check_val !== "1") {
				success = false;
			}
		}
		else {
			if (check_val !== "1") {
				success = false;
			}
		}

		if (!success) {
			message = "휴대폰 인증을 해주세요.";
		}
	}
	else if (id === "email_auth_text") {
		check_val = $.trim($("#is_check_email").val());

		if (process_type === "edit") {
			standard_value = $.trim($("#member_email_address").val());
			compare_value = $.trim($("#now_member_email_address").val());

			if (standard_value !== compare_value && check_val !== "1") {
				success = false;
			}
		}
		else {
			if (check_val !== "1") {
				success = false;
			}
		}

		if (!success) {
			message = "이메일 인증을 해주세요.";
		}
	}
	else if (id === "recommender_id") {
		check_val = $.trim($("#is_check_recommender_id").val());

		if (check_val !== "1") {
			success = false;
			message = "추천인 확인을 해주세요.";
		}
	}
	else if (id === "prefect_name") {
		check_val = $.trim($("#is_check_prefect").val());

		if (check_val !== "1") {
			success = false;
		}

		if (!success) {
			message = "지사명 확인을 해주세요.";
		}
	}
	else if (id === "center_name") {
		check_val = $.trim($("#is_check_center").val());

		if (check_val !== "1") {
			success = false;
		}

		if (!success) {
			message = "센터명 확인을 해주세요.";
		}
	}
	else if (id === "member_id") {
		check_val = $.trim($("#is_check_id").val());

		if (check_val !== "1") {
			success = false;
		}		

		if (!success) {
			message = "아이디 확인을 해주세요.";
		}
	}
	else if (id === "token_id") {
		check_val = $.trim($("#is_check_token_id").val());

		if (check_val !== "1") {
			success = false;
		}

		if (!success) {
			message = "TOKEN ID 확인을 해주세요.";
		}
	}
	else {
		return true;
	}

	ReturnMessage(obj, success, message);

	return success;
}